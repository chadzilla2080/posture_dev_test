services:
  db:
    image: mysql:8.0
    container_name: posture_code_test_db
    restart: always
    environment:
      MYSQL_DATABASE: wordpress
      MYSQL_USER: wordpress
      MYSQL_PASSWORD: wordpress_password
      MYSQL_ROOT_PASSWORD: somewordpress
      MYSQL_ROOT_HOST: "%"
    command: "--default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci"
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - posture_network

  wordpress:
    build:
      context: ../..
      dockerfile: docker/prod/Dockerfile.prod
    container_name: posture_code_test_wp
    restart: always
    depends_on:
      - db
    environment:
      WORDPRESS_DB_HOST: db:3306
      WORDPRESS_DB_NAME: wordpress
      WORDPRESS_DB_USER: wordpress
      WORDPRESS_DB_PASSWORD: wordpress_password
      WORDPRESS_TABLE_PREFIX: wp_
    volumes:
      - wp_data:/var/www/html
      - ../../wp-content:/var/www/html/wp-content
    healthcheck:
      test: ["CMD", "wp", "core", "is-installed", "--allow-root"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - posture_network

  nginx:
    image: nginx:latest
    container_name: posture_prod_nginx
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./nginx.prod.conf:/etc/nginx/conf.d/default.conf
      - wp_data:/var/www/html
    depends_on:
      - wordpress
    networks:
      - posture_network

  backup:
    image: alpine
    volumes:
      - wp_data:/backup/wp
      - db_data:/backup/db
      - ./backups:/output
    command: |
      sh -c 'apk add --no-cache tar && 
      tar -czf /output/backup-$$(date +%Y%m%d).tar.gz /backup'
    depends_on:
      - wordpress
      - db

networks:
  posture_network:

volumes:
  db_data:
  wp_data:
